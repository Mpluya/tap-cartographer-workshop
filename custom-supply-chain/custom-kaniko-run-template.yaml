apiVersion: carto.run/v1alpha1
kind: ClusterRunTemplate
metadata:
  name: custom-kaniko-template
spec:
  outputs:
    latest-image: .status.taskResults[?(@.name=="latest-image")].value
  template:
    apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      generateName: $(runnable.metadata.name)$-
      labels: $(runnable.metadata.labels)$
    spec:
      taskSpec:
        results:
        - name: latest-image
        steps:
        - name: download-and-unpack-tarball
          image: alpine
          script: |-
            cd `mktemp -d`
            wget -qO- $(runnable.spec.inputs.source-url)$ | tar xvz -m

            cp -a $(runnable.spec.inputs.source-subpath)$/. /source
          volumeMounts:
          - name: source-dir
            mountPath: /source
        - image: gcr.io/kaniko-project/executor:latest
          name: build-container-and-push
          args:
          - --dockerfile=$(runnable.spec.inputs.dockerfile)$
          - --context=dir:///source
          - --destination=$(runnable.spec.inputs.image)$
          - --digest-file=/tekton/results/digest-file
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: source-dir
              mountPath: /source
            - name: kaniko-secret
              mountPath: /kaniko/.docker
        - name: write-image-ref
          image: alpine
          script: |
            image=$(runnable.spec.inputs.image)$
            digest_path=/tekton/results/digest-file
            digest="$(cat ${digest_path})"

            echo -n "${image}@${digest}" | tee /tekton/results/latest-image
        volumes:
          - name: source-dir
            emptyDir: {}
          - name: kaniko-secret
            secret:
              secretName: registry-credentials
              items:
                - key: .dockerconfigjson
                  path: config.json